name: build app

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
    secrets:
      env_file:
        required: true
      KEY_STORE:
        required: true
      KEY_PROPERTIES:
        required: true
      FASTLANE_SUPPLY:
        required: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  COMMENT_MESSAGE: "Successfully deployed to ${{ inputs.environment }}! :rocket:"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          cache: true
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Create env file
        run: |
          rm -f .env.prod
          rm -f .env.dev
          touch .env.prod
          touch .env.dev
          touch .env.uat

      - name: Include env file
        run: echo "${{ secrets.env_file }}" >> .env.${{ inputs.environment == 'staging' && 'dev' || 'prod' }}

      - name: Decode secret file
        run: echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/upload-keystore.jks

      - name: Include key properties
        run: echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

      - name: Include fastlane supply file
        run: echo "${{ secrets.FASTLANE_SUPPLY }}" | base64 --decode > fastlane-supply.json

      - name: Clear cache
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Run Bundle Install
        run: |
          cd android
          bundle install

      - name: Run Fastlane
        run: |
          cd android
          bundle exec fastlane firebaseDistribute env:${{ inputs.environment }}

name: build docker image

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, closed]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          cache: true
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Create env file
        run: |
          rm -f .env.prod
          rm -f .env.dev
          touch .env.prod
          touch .env.dev
          touch .env.uat

      - name: Include env file
        run: echo "${{ secrets.env_file }}" >> .env.${{ inputs.environment == 'staging' && 'dev' || 'prod' }}

      - name: Decode secret file
        env:
          UPLOAD_KEY_BASE64: ${{ secrets.KEY_STORE }}
        run: |
          echo $UPLOAD_KEY_BASE64 | base64 --decode > upload-keystore.jks
          mv upload-keystore.jks android/
      - name: Include key properties
        env:
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          echo $KEY_PROPERTIES > key.properties
          mv key.properties android/

      - name: Clear cache
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Run Fastlane
        run: |
          cd android
          bundle exec fastlane buildDevApk

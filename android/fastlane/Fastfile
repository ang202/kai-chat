# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

module Environment
  DEV = "DEV"
  UAT = "UAT"
  SIT = "SIT"
  PROD = "PROD"
end

platform :android do
  desc "Building an apk"
  lane :buildApk do
    environment = UI.select("Select your environment: ", [Environment::DEV,Environment::UAT,Environment::SIT,Environment::PROD])
    UI.success("You have selected '#{environment}' environment")
    case environment
    when Environment::DEV
      devApk
    when Environment::UAT
      uatApk
    when Environment::SIT
      sitApk
    when Environment::PROD
      releaseApk
    end
  end

  desc "Building an Android App Bundle"
  lane :appBundle do
    sh("flutter build appbundle --obfuscate --split-debug-info=symbols --release --flavor prod --dart-define=environment=prod -t lib/main_prod.dart --target-platform android-arm,android-arm64,android-x64")
    sh("mv ../../build/app/outputs/bundle/prodRelease/app-prod-release.aab ~/Downloads/prodAppBundle.aab")
    # sh("flutter packages pub run sentry_dart_plugin")
  end

  desc "Building an Beta version to Play Store"
  lane :beta do
    appBundle
    supply(
      track: "internal",
      aab_paths: "../build/app/outputs/bundle/prodRelease/app-prod-release.aab"
    )
  end

  desc "Publishing apk to Firebase Distribution"
  lane :firebaseDistribute do |options|
    firebase_login_credentials = "fastlane/firebase_login_key.json"
    output_json_path = "./app/google-services.json"
    build_output = load_json(json_path: output_json_path)
    androidAppId = build_output["client"][0]["client_info"]["mobilesdk_app_id"]

    if (!androidAppId.nil? && !firebase_login_credentials.nil?)
      releaseApk(isMove: false)
      firebase_app_distribution(
        app: androidAppId,
        service_credentials_file: firebase_login_credentials,
        release_notes: (!options[:notes].nil? && !options[:notes].empty?) ? options[:notes] : "",
        android_artifact_type: "APK",
        android_artifact_path: "../build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk",
      )
    end
  end

  lane :increment_version do
    output_json_path = "./app/google-services.json"
    build_output = load_json(json_path: output_json_path)
    latest_release = firebase_app_distribution_get_latest_release(
      app: build_output["client"][0]["client_info"]["mobilesdk_app_id"]
    )
    put latest_release[:buildVersion].to_i
  end

  desc "Building a development apk"
  private_lane :devApk do
    sh("flutter build apk --obfuscate --split-debug-info=symbols --debug --flavor dev --dart-define=environment=dev -t lib/main_dev.dart --split-per-abi --target-platform android-arm,android-arm64,android-x64")
    sh("mv ../../build/app/outputs/flutter-apk/app-arm64-v8a-dev-debug.apk ~/Downloads/dev.apk")
  end
  
  desc "Building a SIT apk"
  private_lane :sitApk do
    sh("flutter build apk --profile --flavor sit --dart-define=environment=sit -t lib/main_sit.dart --split-per-abi --target-platform android-arm,android-arm64,android-x64")
    sh("mv ../../build/app/outputs/flutter-apk/app-arm64-v8a-sit-profile.apk ~/Downloads/uat.apk")
  end

  desc "Building a UAT apk"
  private_lane :uatApk do
    sh("flutter build apk --profile --flavor uat --dart-define=environment=uat -t lib/main_uat.dart --split-per-abi --target-platform android-arm,android-arm64,android-x64")
    sh("mv ../../build/app/outputs/flutter-apk/app-arm64-v8a-uat-profile.apk ~/Downloads/uat.apk")
  end

  desc "Building a release apk"
  private_lane :releaseApk do |options|
    sh("flutter build apk --obfuscate --split-debug-info=symbols --release --flavor prod --dart-define=environment=prod -t lib/main_prod.dart --split-per-abi --target-platform android-arm,android-arm64,android-x64")
    sh("mv ../../build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk ~/Downloads/release.apk") unless (options[:isMove] || true)
  end
end
